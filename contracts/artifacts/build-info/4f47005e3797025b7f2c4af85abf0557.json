{
	"id": "4f47005e3797025b7f2c4af85abf0557",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Exception.sol": {
				"content": "pragma solidity 0.5.13;\n\ncontract Exception {\n  mapping (address=>uint64) public balanceReceived;\n\n  address payable owner;\n  \n  constructor() public {\n    owner = msg.sender;\n  }\n\n  function destroySC() public {\n    require(msg.sender == owner, \"You are not the owner\");\n    selfdestruct(owner);\n  }\n\n  function recievedMoney() public payable {\n    assert(balanceReceived[msg.sender] + uint64(msg.value) >= balanceReceived[msg.sender]);\n    balanceReceived[msg.sender] += uint64(msg.value);\n  }\n\n  function withdrawMoney(address payable _to, uint64 _amount) public {\n    require(_amount <= balanceReceived[msg.sender], \"You don't have enough Ether\");\n    assert(balanceReceived[msg.sender] >= balanceReceived[msg.sender] + _amount);\n    balanceReceived[msg.sender] -= _amount;\n    _to.transfer(_amount);\n  }\n\n  function getOwner() public view returns(address) {\n    return owner;\n  }\n\n  function convertWeiToEth(uint _wei) public pure returns (uint) {\n    return _wei / 1000;\n  }\n\n  function () external payable {\n    recievedMoney();\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Exception.sol": {
				"Exception": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceReceived",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_wei",
									"type": "uint256"
								}
							],
							"name": "convertWeiToEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "destroySC",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "recievedMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "_amount",
									"type": "uint64"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Exception.sol\":25:1041  contract Exception {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Exception.sol\":129:179  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Exception.sol\":129:179  constructor() public {... */\n  pop\n    /* \"contracts/Exception.sol\":164:174  msg.sender */\n  caller\n    /* \"contracts/Exception.sol\":156:161  owner */\n  0x01\n  0x00\n    /* \"contracts/Exception.sol\":156:174  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Exception.sol\":25:1041  contract Exception {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Exception.sol\":25:1041  contract Exception {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0718b2f8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0ad19aeb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x88a386cb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9de1c33b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd18a42e1\n      eq\n      tag_7\n      jumpi\n    tag_1:\n        /* \"contracts/Exception.sol\":1019:1034  recievedMoney() */\n      tag_10\n        /* \"contracts/Exception.sol\":1019:1032  recievedMoney */\n      tag_11\n        /* \"contracts/Exception.sol\":1019:1034  recievedMoney() */\n      jump\t// in\n    tag_10:\n        /* \"contracts/Exception.sol\":25:1041  contract Exception {... */\n      stop\n        /* \"contracts/Exception.sol\":888:980  function convertWeiToEth(uint _wei) public pure returns (uint) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/Exception.sol\":888:980  function convertWeiToEth(uint _wei) public pure returns (uint) {... */\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/Exception.sol\":888:980  function convertWeiToEth(uint _wei) public pure returns (uint) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exception.sol\":499:808  function withdrawMoney(address payable _to, uint64 _amount) public {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/Exception.sol\":499:808  function withdrawMoney(address payable _to, uint64 _amount) public {... */\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/Exception.sol\":499:808  function withdrawMoney(address payable _to, uint64 _amount) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Exception.sol\":304:495  function recievedMoney() public payable {... */\n    tag_4:\n      tag_20\n      tag_11\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Exception.sol\":812:884  function getOwner() public view returns(address) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/Exception.sol\":812:884  function getOwner() public view returns(address) {... */\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exception.sol\":183:300  function destroySC() public {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/Exception.sol\":183:300  function destroySC() public {... */\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Exception.sol\":48:96  mapping (address=>uint64) public balanceReceived */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/Exception.sol\":48:96  mapping (address=>uint64) public balanceReceived */\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"contracts/Exception.sol\":48:96  mapping (address=>uint64) public balanceReceived */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exception.sol\":304:495  function recievedMoney() public payable {... */\n    tag_11:\n        /* \"contracts/Exception.sol\":408:423  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":408:435  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":424:434  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":408:435  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":357:435  balanceReceived[msg.sender] + uint64(msg.value) >= balanceReceived[msg.sender] */\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":394:403  msg.value */\n      callvalue\n        /* \"contracts/Exception.sol\":357:372  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":357:384  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":373:383  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":357:384  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":357:404  balanceReceived[msg.sender] + uint64(msg.value) */\n      add\n        /* \"contracts/Exception.sol\":357:435  balanceReceived[msg.sender] + uint64(msg.value) >= balanceReceived[msg.sender] */\n      0xffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/Exception.sol\":350:436  assert(balanceReceived[msg.sender] + uint64(msg.value) >= balanceReceived[msg.sender]) */\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n        /* \"contracts/Exception.sol\":480:489  msg.value */\n      callvalue\n        /* \"contracts/Exception.sol\":442:457  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":442:469  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":458:468  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":442:469  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Exception.sol\":442:490  balanceReceived[msg.sender] += uint64(msg.value) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exception.sol\":304:495  function recievedMoney() public payable {... */\n      jump\t// out\n        /* \"contracts/Exception.sol\":888:980  function convertWeiToEth(uint _wei) public pure returns (uint) {... */\n    tag_15:\n        /* \"contracts/Exception.sol\":945:949  uint */\n      0x00\n        /* \"contracts/Exception.sol\":971:975  1000 */\n      0x03e8\n        /* \"contracts/Exception.sol\":964:968  _wei */\n      dup3\n        /* \"contracts/Exception.sol\":964:975  _wei / 1000 */\n      dup2\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      div\n        /* \"contracts/Exception.sol\":957:975  return _wei / 1000 */\n      swap1\n      pop\n        /* \"contracts/Exception.sol\":888:980  function convertWeiToEth(uint _wei) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exception.sol\":499:808  function withdrawMoney(address payable _to, uint64 _amount) public {... */\n    tag_19:\n        /* \"contracts/Exception.sol\":591:606  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":591:618  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":607:617  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":591:618  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":580:618  _amount <= balanceReceived[msg.sender] */\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":580:587  _amount */\n      dup2\n        /* \"contracts/Exception.sol\":580:618  _amount <= balanceReceived[msg.sender] */\n      0xffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/Exception.sol\":572:650  require(_amount <= balanceReceived[msg.sender], \"You don't have enough Ether\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520646f6e2774206861766520656e6f7567682045746865720000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/Exception.sol\":724:731  _amount */\n      dup1\n        /* \"contracts/Exception.sol\":694:709  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":694:721  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":710:720  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":694:721  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":694:731  balanceReceived[msg.sender] + _amount */\n      add\n        /* \"contracts/Exception.sol\":663:731  balanceReceived[msg.sender] >= balanceReceived[msg.sender] + _amount */\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":663:678  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":663:690  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":679:689  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":663:690  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":663:731  balanceReceived[msg.sender] >= balanceReceived[msg.sender] + _amount */\n      0xffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/Exception.sol\":656:732  assert(balanceReceived[msg.sender] >= balanceReceived[msg.sender] + _amount) */\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n        /* \"contracts/Exception.sol\":769:776  _amount */\n      dup1\n        /* \"contracts/Exception.sol\":738:753  balanceReceived */\n      0x00\n        /* \"contracts/Exception.sol\":738:765  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/Exception.sol\":754:764  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":738:765  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Exception.sol\":738:776  balanceReceived[msg.sender] -= _amount */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Exception.sol\":782:785  _to */\n      dup2\n        /* \"contracts/Exception.sol\":782:794  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":782:803  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/Exception.sol\":795:802  _amount */\n      dup3\n        /* \"contracts/Exception.sol\":782:803  _to.transfer(_amount) */\n      0xffffffffffffffff\n      and\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"contracts/Exception.sol\":782:803  _to.transfer(_amount) */\n      pop\n        /* \"contracts/Exception.sol\":499:808  function withdrawMoney(address payable _to, uint64 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exception.sol\":812:884  function getOwner() public view returns(address) {... */\n    tag_23:\n        /* \"contracts/Exception.sol\":852:859  address */\n      0x00\n        /* \"contracts/Exception.sol\":874:879  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":867:879  return owner */\n      swap1\n      pop\n        /* \"contracts/Exception.sol\":812:884  function getOwner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Exception.sol\":183:300  function destroySC() public {... */\n    tag_26:\n        /* \"contracts/Exception.sol\":239:244  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":225:244  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":225:235  msg.sender */\n      caller\n        /* \"contracts/Exception.sol\":225:244  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Exception.sol\":217:270  require(msg.sender == owner, \"You are not the owner\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520617265206e6f7420746865206f776e65720000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/Exception.sol\":289:294  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exception.sol\":276:295  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/Exception.sol\":48:96  mapping (address=>uint64) public balanceReceived */\n    tag_30:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158209044b4013d0044c501c7dea8da1f5d27d22505321aae75d3f0ea3e0a9fd8d97364736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610754806100616000396000f3fe6080604052600436106100555760003560e01c80630718b2f81461005f5780630ad19aeb146100ae57806388a386cb14610113578063893d20e81461011d5780639de1c33b14610174578063d18a42e11461018b575b61005d610204565b005b34801561006b57600080fd5b506100986004803603602081101561008257600080fd5b8101908080359060200190929190505050610348565b6040518082815260200191505060405180910390f35b3480156100ba57600080fd5b50610111600480360360408110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919050505061035d565b005b61011b610204565b005b34801561012957600080fd5b506101326105d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018057600080fd5b506101896105fa565b005b34801561019757600080fd5b506101da600480360360208110156101ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f8565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff1610156102c857fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550565b60006103e8828161035557fe5b049050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff161115610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f7520646f6e2774206861766520656e6f756768204574686572000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610156104fd57fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8267ffffffffffffffff169081150290604051600060405180830381858888f193505050501580156105cb573d6000803e3d6000fd5b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f596f7520617265206e6f7420746865206f776e6572000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60006020528060005260406000206000915054906101000a900467ffffffffffffffff168156fea265627a7a723158209044b4013d0044c501c7dea8da1f5d27d22505321aae75d3f0ea3e0a9fd8d97364736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x754 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x718B2F8 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xAD19AEB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x88A386CB EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9DE1C33B EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH2 0x5D PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 DUP2 PUSH2 0x355 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F6E2774206861766520656E6F7567682045746865720000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP1 DIFFICULTY 0xB4 ADD RETURNDATASIZE STOP DIFFICULTY 0xC5 ADD 0xC7 0xDE 0xA8 0xDA 0x1F 0x5D 0x27 0xD2 0x25 SDIV ORIGIN BYTE 0xAE PUSH22 0xD3F0EA3E0A9FD8D97364736F6C634300050D00320000 ",
							"sourceMap": "25:1016:0:-;;;129:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:50:0;164:10;156:5;;:18;;;;;;;;;;;;;;;;;;25:1016;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c80630718b2f81461005f5780630ad19aeb146100ae57806388a386cb14610113578063893d20e81461011d5780639de1c33b14610174578063d18a42e11461018b575b61005d610204565b005b34801561006b57600080fd5b506100986004803603602081101561008257600080fd5b8101908080359060200190929190505050610348565b6040518082815260200191505060405180910390f35b3480156100ba57600080fd5b50610111600480360360408110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919050505061035d565b005b61011b610204565b005b34801561012957600080fd5b506101326105d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018057600080fd5b506101896105fa565b005b34801561019757600080fd5b506101da600480360360208110156101ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f8565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff1610156102c857fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550565b60006103e8828161035557fe5b049050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff161115610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f7520646f6e2774206861766520656e6f756768204574686572000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610156104fd57fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8267ffffffffffffffff169081150290604051600060405180830381858888f193505050501580156105cb573d6000803e3d6000fd5b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f596f7520617265206e6f7420746865206f776e6572000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60006020528060005260406000206000915054906101000a900467ffffffffffffffff168156fea265627a7a723158209044b4013d0044c501c7dea8da1f5d27d22505321aae75d3f0ea3e0a9fd8d97364736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x718B2F8 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xAD19AEB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x88A386CB EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9DE1C33B EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH2 0x5D PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x5FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 DUP2 PUSH2 0x355 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520646F6E2774206861766520656E6F7567682045746865720000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP1 DIFFICULTY 0xB4 ADD RETURNDATASIZE STOP DIFFICULTY 0xC5 ADD 0xC7 0xDE 0xA8 0xDA 0x1F 0x5D 0x27 0xD2 0x25 SDIV ORIGIN BYTE 0xAE PUSH22 0xD3F0EA3E0A9FD8D97364736F6C634300050D00320000 ",
							"sourceMap": "25:1016:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:15;:13;:15::i;:::-;25:1016;888:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;888:92:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;888:92:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;499:309;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:309:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:309:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;304:191;;;:::i;:::-;;812:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:72:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;183:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:117:0;;;:::i;:::-;;48:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48:48:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;304:191;408:15;:27;424:10;408:27;;;;;;;;;;;;;;;;;;;;;;;;;357:78;;394:9;357:15;:27;373:10;357:27;;;;;;;;;;;;;;;;;;;;;;;;;:47;:78;;;;350:86;;;;480:9;442:15;:27;458:10;442:27;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:191::o;888:92::-;945:4;971;964;:11;;;;;;957:18;;888:92;;;:::o;499:309::-;591:15;:27;607:10;591:27;;;;;;;;;;;;;;;;;;;;;;;;;580:38;;:7;:38;;;;572:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:7;694:15;:27;710:10;694:27;;;;;;;;;;;;;;;;;;;;;;;;;:37;663:68;;:15;:27;679:10;663:27;;;;;;;;;;;;;;;;;;;;;;;;;:68;;;;656:76;;;;769:7;738:15;:27;754:10;738:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:3;:12;;:21;795:7;782:21;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;782:21:0;499:309;;:::o;812:72::-;852:7;874:5;;;;;;;;;;;867:12;;812:72;:::o;183:117::-;239:5;;;;;;;;;;;225:19;;:10;:19;;;217:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:5;;;;;;;;;;;276:19;;;48:48;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "375200",
								"executionCost": "20677",
								"totalCost": "395877"
							},
							"external": {
								"": "21506",
								"balanceReceived(address)": "694",
								"convertWeiToEth(uint256)": "303",
								"destroySC()": "30716",
								"getOwner()": "505",
								"recievedMoney()": "21440",
								"withdrawMoney(address,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "MSTORE"
								},
								{
									"begin": 129,
									"end": 179,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 179,
									"name": "POP"
								},
								{
									"begin": 164,
									"end": 174,
									"name": "CALLER"
								},
								{
									"begin": 156,
									"end": 161,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 156,
									"end": 161,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "EXP"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "DUP2"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "SLOAD"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "DUP2"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "MUL"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "NOT"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "AND"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "SWAP1"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "DUP4"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "AND"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "MUL"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "OR"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "SWAP1"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "SSTORE"
								},
								{
									"begin": 156,
									"end": 174,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1041,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209044b4013d0044c501c7dea8da1f5d27d22505321aae75d3f0ea3e0a9fd8d97364736f6c634300050d0032",
									".code": [
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "718B2F8"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "AD19AEB"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "88A386CB"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "9DE1C33B"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH",
											"value": "D18A42E1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "JUMPDEST"
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1019,
											"end": 1032,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 1041,
											"name": "STOP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP3"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP3"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "MSTORE"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SUB"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "RETURN"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP3"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "STOP"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "STOP"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "DUP3"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "SWAP2"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "SWAP2"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "RETURN"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "STOP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "ADD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "AND"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "ADD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP3"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "MLOAD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "AND"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "AND"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "MSTORE"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "ADD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "MLOAD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SUB"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "RETURN"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "DUP1"
										},
										{
											"begin": 424,
											"end": 434,
											"name": "CALLER"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "KECCAK256"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SLOAD"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "EXP"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "DIV"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 394,
											"end": 403,
											"name": "CALLVALUE"
										},
										{
											"begin": 357,
											"end": 372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "DUP1"
										},
										{
											"begin": 373,
											"end": 383,
											"name": "CALLER"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "KECCAK256"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "SLOAD"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "EXP"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "DIV"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 384,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 404,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "LT"
										},
										{
											"begin": 357,
											"end": 435,
											"name": "ISZERO"
										},
										{
											"begin": 350,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 350,
											"end": 436,
											"name": "JUMPI"
										},
										{
											"begin": 350,
											"end": 436,
											"name": "INVALID"
										},
										{
											"begin": 350,
											"end": 436,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 350,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "CALLVALUE"
										},
										{
											"begin": 442,
											"end": 457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 458,
											"end": 468,
											"name": "CALLER"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "AND"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "AND"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "KECCAK256"
										},
										{
											"begin": 442,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP3"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP3"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP3"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SLOAD"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "EXP"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DIV"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "AND"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "ADD"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP3"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "POP"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "EXP"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SLOAD"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "MUL"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "NOT"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "AND"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "DUP4"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "AND"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "MUL"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "OR"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SWAP1"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "SSTORE"
										},
										{
											"begin": 442,
											"end": 490,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 945,
											"end": 949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 971,
											"end": 975,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 964,
											"end": 968,
											"name": "DUP3"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "JUMPI"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "INVALID"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "JUMPDEST"
										},
										{
											"begin": 964,
											"end": 975,
											"name": "DIV"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 980,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "DUP1"
										},
										{
											"begin": 607,
											"end": 617,
											"name": "CALLER"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "MSTORE"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "MSTORE"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "KECCAK256"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SLOAD"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "EXP"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "DIV"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 618,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP2"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "AND"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "GT"
										},
										{
											"begin": 580,
											"end": 618,
											"name": "ISZERO"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "JUMPI"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MLOAD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MSTORE"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP3"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "SUB"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP3"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MSTORE"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MSTORE"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "596F7520646F6E2774206861766520656E6F7567682045746865720000000000"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MSTORE"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "ADD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "MLOAD"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "SUB"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "REVERT"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 572,
											"end": 650,
											"name": "JUMPDEST"
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 694,
											"end": 709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DUP1"
										},
										{
											"begin": 710,
											"end": 720,
											"name": "CALLER"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "MSTORE"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "MSTORE"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "KECCAK256"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "DIV"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 694,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "DUP1"
										},
										{
											"begin": 679,
											"end": 689,
											"name": "CALLER"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "DUP2"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "MSTORE"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "ADD"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "KECCAK256"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SLOAD"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "EXP"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "DIV"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 690,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "LT"
										},
										{
											"begin": 663,
											"end": 731,
											"name": "ISZERO"
										},
										{
											"begin": 656,
											"end": 732,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 656,
											"end": 732,
											"name": "JUMPI"
										},
										{
											"begin": 656,
											"end": 732,
											"name": "INVALID"
										},
										{
											"begin": 656,
											"end": 732,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 656,
											"end": 732,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 776,
											"name": "DUP1"
										},
										{
											"begin": 738,
											"end": 753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 754,
											"end": 764,
											"name": "CALLER"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DIV"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SUB"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP3"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "POP"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 776,
											"name": "POP"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP2"
										},
										{
											"begin": 782,
											"end": 794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 794,
											"name": "AND"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 795,
											"end": 802,
											"name": "DUP3"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "AND"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "ISZERO"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "MUL"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "MLOAD"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "MLOAD"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP1"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP4"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "SUB"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP2"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP6"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP9"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "DUP9"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "CALL"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "SWAP4"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "POP"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "POP"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "POP"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "POP"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 782,
											"end": 803,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 499,
											"end": 808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "SLOAD"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "EXP"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "DIV"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 879,
											"name": "AND"
										},
										{
											"begin": 867,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 867,
											"end": 879,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 183,
											"end": 300,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SLOAD"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "EXP"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "SWAP1"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DIV"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "AND"
										},
										{
											"begin": 225,
											"end": 244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 225,
											"end": 244,
											"name": "AND"
										},
										{
											"begin": 225,
											"end": 235,
											"name": "CALLER"
										},
										{
											"begin": 225,
											"end": 244,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 225,
											"end": 244,
											"name": "AND"
										},
										{
											"begin": 225,
											"end": 244,
											"name": "EQ"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "596F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 217,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SLOAD"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "EXP"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP1"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "DIV"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "AND"
										},
										{
											"begin": 276,
											"end": 295,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "MSTORE"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "MSTORE"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "KECCAK256"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "POP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SLOAD"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "EXP"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DIV"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "AND"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 48,
											"end": 96,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceReceived(address)": "d18a42e1",
							"convertWeiToEth(uint256)": "0718b2f8",
							"destroySC()": "9de1c33b",
							"getOwner()": "893d20e8",
							"recievedMoney()": "88a386cb",
							"withdrawMoney(address,uint64)": "0ad19aeb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceReceived\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"convertWeiToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroySC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"recievedMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Exception.sol\":\"Exception\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Exception.sol\":{\"keccak256\":\"0xb0f3f08b8aed56af7e76f00275fd287adaa2f27254f6da6cf938c1a601cb10d6\",\"urls\":[\"bzz-raw://1c7318225884db548c42cee485e261715a1c54bb755b2eacc0e7a19d798fb105\",\"dweb:/ipfs/QmU7fUr7m69NqZ7TiEkPeUJRgdfqUMKdbJS4XYGfhsyLc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Exception.sol:Exception",
								"label": "balanceReceived",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint64)"
							},
							{
								"astId": 7,
								"contract": "contracts/Exception.sol:Exception",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint64)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint64)",
								"numberOfBytes": "32",
								"value": "t_uint64"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Exception.sol": {
				"ast": {
					"absolutePath": "contracts/Exception.sol",
					"exportedSymbols": {
						"Exception": [
							136
						]
					},
					"id": 137,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "Exception",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceReceived",
									"nodeType": "VariableDeclaration",
									"scope": 136,
									"src": "48:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
										"typeString": "mapping(address => uint64)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "57:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "48:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
											"typeString": "mapping(address => uint64)"
										},
										"valueType": {
											"id": 3,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "66:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 136,
									"src": "101:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "101:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "150:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "156:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "164:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "164:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "156:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "156:18:0"
											}
										]
									},
									"documentation": null,
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:0"
									},
									"scope": 136,
									"src": "129:50:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "211:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "225:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "225:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "239:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "225:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "246:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															155
														],
														"referencedDeclaration": 155,
														"src": "217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "217:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "217:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 28,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "289:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 27,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "276:19:0"
											}
										]
									},
									"documentation": null,
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroySC",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:0"
									},
									"scope": 136,
									"src": "183:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "344:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 36,
																		"name": "balanceReceived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "357:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																			"typeString": "mapping(address => uint64)"
																		}
																	},
																	"id": 39,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 37,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "373:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "373:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "357:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 41,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "394:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "394:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "387:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": "uint64"
																	},
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "387:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "357:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "408:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 48,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 46,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "424:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "424:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "408:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "357:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "350:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "350:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "350:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 52,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "442:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 55,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 53,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "458:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "458:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "442:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "480:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "480:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": "uint64"
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "473:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "442:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "442:48:0"
											}
										]
									},
									"documentation": null,
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recievedMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:0"
									},
									"scope": 136,
									"src": "304:191:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "566:242:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "580:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 72,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "591:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 75,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 73,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "607:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "607:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "591:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "580:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520646f6e2774206861766520656e6f756768204574686572",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "620:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9a3a283479255d2cafd2bebc9bae953abe43578baccb4bd161e5896c96581eb",
																"typeString": "literal_string \"You don't have enough Ether\""
															},
															"value": "You don't have enough Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9a3a283479255d2cafd2bebc9bae953abe43578baccb4bd161e5896c96581eb",
																"typeString": "literal_string \"You don't have enough Ether\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															155
														],
														"referencedDeclaration": 155,
														"src": "572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "572:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "572:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "663:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 84,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "679:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "679:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "663:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 85,
																		"name": "balanceReceived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "694:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																			"typeString": "mapping(address => uint64)"
																		}
																	},
																	"id": 88,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 86,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "710:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "710:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "694:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 89,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "694:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "663:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 80,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "656:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "656:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 94,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 97,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "754:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "754:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "738:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "738:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "738:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 104,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 101,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "782:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "782:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "782:21:0"
											}
										]
									},
									"documentation": null,
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "522:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 66,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:37:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:0"
									},
									"scope": 136,
									"src": "499:309:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "861:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "874:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 112,
												"id": 114,
												"nodeType": "Return",
												"src": "867:12:0"
											}
										]
									},
									"documentation": null,
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:9:0"
									},
									"scope": 136,
									"src": "812:72:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "951:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 123,
														"name": "_wei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "964:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31303030",
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "971:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "964:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 122,
												"id": 126,
												"nodeType": "Return",
												"src": "957:18:0"
											}
										]
									},
									"documentation": null,
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertWeiToEth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "_wei",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "913:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "912:11:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "945:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "944:6:0"
									},
									"scope": 136,
									"src": "888:92:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1013:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 131,
														"name": "recievedMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1019:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1019:15:0"
											}
										]
									},
									"documentation": null,
									"id": 135,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:2:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:0"
									},
									"scope": 136,
									"src": "984:55:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "25:1016:0"
						}
					],
					"src": "0:1041:0"
				},
				"id": 0
			}
		}
	}
}